{"version":3,"sources":["utils/storageUtils.js","pages/redux/action-type.js","pages/redux/reducer.js","pages/redux/自写redux/index.js","pages/redux/store.js","assets/images/logo.png","api/ajax.js","api/index.js","pages/redux/actions.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/index.jsx","components/LinkButton/index.jsx","utils/dateUtils.js","components/header/index.jsx","pages/home/home.jsx","pages/category/AddForm.jsx","pages/category/UpdateForm.jsx","pages/category/index.jsx","utils/constants.js","pages/product/home.jsx","pages/product/pictures-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/product.jsx","pages/role/AddRole.jsx","pages/role/AuthRole.jsx","pages/role/role.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/user/UserForm.jsx","pages/user/user.jsx","pages/not-found/not-found.jsx","pages/admin/admin.jsx","App.js","index.js"],"names":["USER_KEY","user","store","set","remove","SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","initUser","get","storageUtils","combineReducers","reducers","headTitle","state","action","type","data","errorMsg","newState","Object","keys","reduce","preState","key","createStore","composeWithDevTools","applyMiddleware","thunk","ajax","url","Promise","resolve","reject","axios","params","post","then","response","catch","error","message","allReq","reqLogin","username","password","reqAddUser","userDetail","reqWeather","jsonp","err","info","weather","lives","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqCategory","reqProducts","pageNum","pageSize","reqUpdateStatus","productId","status","reqSearchProduct","searchName","searchType","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqRoles","reqAddRole","roleName","reqUpdateRole","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","setHeadTitle","receiveUser","logout","Login","onFinish","values","a","props","login","onFinishFailed","errorFields","outOfDate","map","x","console","log","errors","this","to","tailLayout","wrapperCol","offset","span","className","src","logo","alt","labelCol","initialValues","remember","Item","label","rules","required","min","max","pattern","valuePropName","htmlType","Component","connect","dispatch","result","msg","menuList","title","icon","HomeOutlined","isPublic","AppstoreAddOutlined","children","BarsOutlined","ToolOutlined","UserOutlined","SafetyOutlined","AreaChartOutlined","BarChartOutlined","LineChartOutlined","PieChartFilled","SubMenu","LeftNav","hasAuth","item","menus","indexOf","find","child","getMenuNodes","path","location","pathname","cItem","openKey","onClick","menuNodes","mode","theme","defaultOpenKeys","selectedKeys","withRouter","LinkButton","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","currentTime","now","getTime","intervalId","setInterval","setState","getWeather","getTitle","forEach","confirm","ExclamationCircleOutlined","content","onOk","onCancel","clearInterval","CloudOutlined","style","width","height","margin","Home","Option","AddForm","formRef","React","createRef","setForm","current","ref","noStyle","initialValue","value","categorys","placeholder","UpdateForm","Category","loading","subCategorys","parentName","showStatus","initColumns","columns","dataIndex","render","category","showUpdate","showSubCategorys","getCategorys","showCategorys","handleCancel","form","resetFields","showAdd","addCategory","validateFields","updateCategory","extra","PlusOutlined","ArrowRightOutlined","marginRight","dataSource","bordered","rowKey","pagination","defaultPageSize","showQuickJumper","visible","BASE_IMG_URL","ProductHome","total","products","price","updateStatus","history","push","getProducts","laoding","list","success","onChange","event","target","PlusCircleOutlined","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","previewVisible","previewImage","previewTitle","fileList","getImgs","handlePreview","preview","originFileObj","substring","lastIndexOf","handleChange","imgs","length","img","index","uid","uploadButton","marginTop","accept","listType","onPreview","footer","propsTypes","PropTypes","array","RichTextEditor","onEditorStateChange","editorState","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","setRequestHeader","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","createEmpty","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","options","isLeaf","ProductAddUpdate","initOptions","isUpdate","pCategoryId","childrenOptions","option","validatePrice","rule","Error","loadData","selectedOptions","targetOption","submit","desc","categoryIds","pw","editor","goBack","ArrowLeftOutlined","color","fontSize","xs","sm","autoSize","minRows","maxRows","validator","addonAfter","ProductDetail","cName1","cName2","all","results","dangerouslySetInnerHTML","__html","Product","component","exact","AddRole","AuthRole","getMenus","checkedKeys","onCheck","acc","getTreeNodes","treeNodes","nextProps","disabled","checkable","defaultExpandAll","treeData","PureComponent","Role","roles","isShowAdd","isShowAuth","initColumn","create_time","auth_time","getRoles","onRow","addRole","updateRole","auth","auth_name","role_id","rowSelection","selectedRowKeys","onSelect","Bar","sales","Storage","update","sale","pre","getOption","text","tooltip","legend","xAxis","yAxis","series","Line","Pie","radius","getOption2","backgroundColor","left","top","textStyle","trigger","formatter","visualMap","show","inRange","colorLightness","center","sort","b","roseType","normal","labelLine","lineStyle","smooth","length2","itemStyle","shadowBlur","shadowColor","animationType","animationEasing","animationDelay","idx","Math","random","UserForm","phone","email","User","users","isShow","roleNames","deleteUser","initRoleNames","getUsers","addOrUpdateUser","destroyOnClose","NotFound","goHome","replace","Footer","Sider","Content","Admin","from","textAlign","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ee8911dc.chunk.js","sourcesContent":["/* \r\n进行local数据存储管理的工具模块\r\n*/\r\n\r\nimport store from 'store'\r\nconst USER_KEY='user_key'\r\n\r\nexport default  {\r\n/* \r\n保存user\r\n*/\r\n  saveUser(user){\r\n   //  localStorage.setItem(USER_KEY, json.stringify(user))\r\n   store.set(USER_KEY, user)\r\n  },\r\n\r\n/* \r\n读取user\r\n*/\r\n   getUser(){\r\n      //return JSON.parse(localStorage.getItem(USER_KEY )||'{}')\r\n      return store.get(USER_KEY) || {}\r\n   },\r\n/* \r\n删除user\r\n*/\r\n\r\n    removeUser(){\r\n       //localStorage.removeItem(USER_KEY)\r\n       store.remove(USER_KEY)\r\n\r\n    }\r\n}","/* 包含n个action的type常量标识名称的模块 */\nexport const SET_HEAD_TITLE ='set_head_title'  //设置头部标签\nexport const RECEIVE_USER ='receive_user'  \nexport const SHOW_ERROR_MSG ='show_error_msg'  //显示错误信息\nexport const RESET_USER = 'reset_user'//重置用户信息","  /* 用来根据老的state和指定的action生成并返回新的state函数 */\n\nimport storageUtils from \"../../utils/storageUtils\"\n// import {combineReducers} from 'redux'\nimport {combineReducers} from './自写redux/index'\n\nimport {SET_HEAD_TITLE,RECEIVE_USER,SHOW_ERROR_MSG,RESET_USER} from './action-type'\n/* 用来管理头部标题的reducer函数 */\nconst initTitle=''\nfunction headTitle(state=initTitle,action){\n    // console.log(SET_HEAD_TITLE)\n    switch(action.type){\n        case SET_HEAD_TITLE:\n            return action.data\n        default:\n            return state\n    }\n}\n\n/* 管理用户名的reducer */\nconst initUser=storageUtils.getUser()\nfunction user(state=initUser,action){\n    switch(action.type){\n        case RECEIVE_USER:\n            return action.user\n        case SHOW_ERROR_MSG:\n            const errorMsg = action.errorMsg\n            return {...state,errorMsg} //不要直接修改原本的状态数据 state.errorMsg=errorMsg\n        case RESET_USER:\n            return {}\n        default:\n            return state\n    }\n}\n\n/* \n向外默认暴露的是合并产生的总的reducer函数\n管理的总的state的结构 \n{\n    headTitle: '首页',\n    user:{}\n}*/\n\nexport default combineReducers({\n    headTitle,\n    user\n})","/* redux库的主模块\n1.createStore(\n    2.comnbineReducers\n    3.applyMiddleware\n    4.getState\n    5.dispatch\n    6.subscribe\n) */\n\n/* 根据指定reducer创建对象 */\nexport function createStore(reducer) {\n    //初始值为调用reducer返回函数的结果（外部指定的默认值）\n    let state = reducer(undefined,'@@redux/init')\n    //用来存储监听state更新回调函数的数组容器\n    const listeners=[]\n    /* 返回内部的state数据 */\n    function getState(){\n        return state\n    }\n\n    /* 1.分发action，出发reducer调用，产生新state \n    2.保存新的state\n    3.调用所有已存在的监听回调函数*/\n    function dispatch(action){\n        //1\n        const newState = reducer(state,action)\n        //2\n        state = newState\n        //3\n        listeners.forEach(listener=>listener())\n    }\n\n    /*  \n    绑定内部state改变的监听回调\n    */\n    function subscribe(listener){\n        //保存到缓存的listener容器中\n        listeners.push(listener)\n    }\n\n    return {\n        getState,\n        dispatch,\n        subscribe\n    }\n}\n\n\n/* 整合传入的包含多个reducer的对象 */\nexport function combineReducers(reducers){\n    //执行reducers中每个reducer函数得到一个新的子状态，并封装一个对象\n    return (state={},action)=>{\n            const newState =Object.keys(reducers).reduce((preState,key)=>{\n                preState[key] = reducers[key](state[key],action)\n                return preState\n            },{})\n            return newState\n            // const totalState={}\n            // Object.keys(reducers).forEach(key=>{\n            //     totalState[key]=reducers[key](state[key],action)\n            // })\n            // return totalState\n    }\n}","/* redux最核心的管理对象store */\n\nimport {applyMiddleware} from 'redux'\n// import {createStore} from './自写redux/index'\nimport {createStore} from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducer'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n//向外默认暴露store\nconst store=createStore(reducers,composeWithDevTools(applyMiddleware(thunk)))\nexport default store","export default __webpack_public_path__ + \"static/media/logo.f6487143.png\";","\r\n/* 能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化：统一处理请求异常\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错是，不去reject（error），而是显示错误提示\r\n 2. 优化2： 亦不得到的不是response，而是response.data\r\n     在请求resolve时： reslove（response。data） \r\n*/\r\n\r\n\r\nimport axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\nexport default function ajax(url,data={},type='GET'){\r\n  \r\n   return new Promise ((resolve, reject) => { \r\n     let promise\r\n     //1.执行异步ajax请求\r\n     if(type==='GET'){\r\n       promise=axios.get(url,{\r\n         params:data\r\n       })\r\n     } else { //发POST请求\r\n       promise= axios.post(url,data)\r\n       }\r\n     //2. 若果成功了，调动resolve（value）\r\n     promise.then(response=>{\r\n        resolve(response.data)  \r\n      //3. 如果失败了，不调用reject（reason），而是提示异常信息     \r\n     }).catch(error=>{\r\n        message.error('请求出错' + error.message)\r\n     }) \r\n   })\r\n}","/*\r\n * @Author: your name\r\n * @Date: 2021-05-14 09:47:41\r\n * @LastEditTime: 2021-05-27 14:25:26\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\JSStudye:\\Bili前端学习\\5.React\\workspace\\react-admin-client\\src\\api\\index.js\r\n */\r\n\r\n/**\r\n * 要求:能根据接口文档定义接口请求函数\r\n * 包含应用中所有接口请求函数的模块\r\n * 每个接口的返回值都是promise\r\n */\r\n import ajax from \"./ajax\";\r\n import jsonp from \"jsonp\";\r\n import { message } from \"antd\";\r\n \r\n const allReq = {\r\n   reqLogin(username, password) {\r\n     return ajax(\"/login\", { username, password }, \"POST\");\r\n   },\r\n   reqAddUser(userDetail) {\r\n     return ajax(\"/manage/user/add\", userDetail, \"POST\");\r\n   },\r\n \r\n   // json请求的接口请求函数\r\n   reqWeather() {\r\n     return new Promise((resolve, reject) => {\r\n       const url =\r\n         \"https://restapi.amap.com/v3/weather/weatherInfo?city=420100&key=10bf3cbb5656059a6e2462481330f976\";\r\n       jsonp(url, {}, (err, data) => {\r\n         // console.log(\"@@@@\");\r\n         // console.log(\"jsonp\", err, data);\r\n         if (!err && data.info === \"OK\") {\r\n           const { weather } = data.lives[0];\r\n           resolve(weather);\r\n         } else {\r\n           message.error(\"获取天气信息失败\");\r\n         }\r\n       });\r\n     });\r\n   },\r\n \r\n   //获取一级/二级分类的列表\r\n   reqCategorys(parentId) {\r\n     return ajax(\"/manage/category/list\", { parentId }, \"GET\");\r\n   },\r\n   //添加分类\r\n   reqAddCategory(categoryName, parentId) {\r\n     return ajax(\"/manage/category/add\", { categoryName, parentId }, \"POST\");\r\n   },\r\n   //更新分类\r\n   reqUpdateCategory(categoryId, categoryName) {\r\n     return ajax(\r\n       \"/manage/category/update\",\r\n       { categoryId, categoryName },\r\n       \"POST\"\r\n     );\r\n   },\r\n \r\n   //获取一个分类\r\n   reqCategory(categoryId) {\r\n     return ajax(\"/manage/category/info\", { categoryId }, \"GET\");\r\n   },\r\n   //获取商品分页列表\r\n   reqProducts(pageNum, pageSize) {\r\n     return ajax(\"/manage/product/list\", { pageNum, pageSize }, \"GET\");\r\n   },\r\n   //更新商品的状态(上架/下架)\r\n    reqUpdateStatus(productId, status) {\r\n    return ajax(\"/manage/product/updateStatus\", { productId, status }, \"POST\");\r\n  },\r\n \r\n   //搜索商品分页列表    searchType:搜索类型，productDesc/productName\r\n   reqSearchProduct({ pageNum, pageSize, searchName, searchType }) {\r\n     return ajax(\r\n       \"/manage/product/search\",\r\n       {\r\n         pageNum,\r\n         pageSize,\r\n         //想要一个变量名作为属性值的时候，需要加[]\r\n         [searchType]: searchName,\r\n       },\r\n       \"GET\"\r\n     );\r\n   },\r\n \r\n   //删除指定名称的图片\r\n   reqDeleteImg(name) {\r\n     return ajax(\"/manage/img/delete\", { name }, \"POST\");\r\n   },\r\n \r\n   //添加/修改商品\r\n   reqAddOrUpdateProduct(product) {\r\n     return ajax(\r\n       \"/manage/product/\" + (product._id ? \"update\" : \"add\"),\r\n       product,\r\n       \"POST\"\r\n     );\r\n   },\r\n \r\n   //获取所有角色的列表\r\n   reqRoles() {\r\n     return ajax(\"manage/role/list\");\r\n   },\r\n \r\n   //添加角色\r\n   reqAddRole(roleName) {\r\n     return ajax(\"manage/role/add\", { roleName }, \"POST\");\r\n   },\r\n \r\n   //更新角色权限,形参role为对象\r\n   reqUpdateRole(role) {\r\n     return ajax(\"manage/role/update\", role, \"POST\");\r\n   },\r\n \r\n   //获取用户列表\r\n   reqUsers() {\r\n     return ajax(\"/manage/user/list\");\r\n   },\r\n \r\n   //删除指定用户\r\n   reqDeleteUser(userId) {\r\n     return ajax(\"/manage/user/delete\", { userId }, \"POST\");\r\n   },\r\n \r\n   //添加/删除用户\r\n   reqAddOrUpdateUser(user) {\r\n     return ajax(\"/manage/user/\" + (user._id ? \"update\" : \"add\"), user, \"POST\");\r\n   },\r\n };\r\n // allReq.reqWeather();\r\n export default allReq;\r\n\r\n  ","/* 包含n个action creator函数的模块\n同步action:对象{type:xxx,date:数据} \n异步action:函数 dispatch=>{}*/\nimport {\n  SET_HEAD_TITLE,\n  RECEIVE_USER,\n  SHOW_ERROR_MSG,\n  RESET_USER,\n} from \"./action-type\";\nimport  allReq from \"../../api\";\nimport storageUtils from \"../../utils/storageUtils\";\n/* 设置头部标题的同步action */\nexport const setHeadTitle = (headTitle) => ({\n  type: SET_HEAD_TITLE,\n  data: headTitle,\n});\n//接收用户的同步action\nexport const receiveUser = (user) => ({ type: RECEIVE_USER, user });\n//显示错误信息的同步action\nexport const showErrorMsg = (errorMsg) => ({ type: SHOW_ERROR_MSG, errorMsg });\n\n/* 退出登陆的同步action */\nexport const logout = () => {\n  //删除local中的user\n  storageUtils.removeUser();\n  //返回action对象\n  return { type: RESET_USER };\n};\n\n/*  \n登陆的异步 action\n*/\nexport const login = (username, password) => async (dispatch) => {\n  //执行异步请求\n  const result = await allReq.reqLogin(username, password);\n  //如果成功，分发成功的同步action\n  if (result.status === 0) {\n    const user = result.data;\n    // memoryUtils.user = user;\n    //保存在local中\n    storageUtils.saveUser(user);\n    //分发接受用户的同步action\n    dispatch(receiveUser(user));\n    //登陆成功\n  } else {\n    //如果失败，分发成功的同步action\n    const msg = result.msg;\n    dispatch(showErrorMsg(msg));\n  }\n};\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { Form, Input, Button,  Checkbox, message } from 'antd';\r\n//import allReq from \"../../api\"\r\nimport './login.less'\r\nimport logo from '../../assets/images/logo.png'\r\n//import memoryUtils from '../../utils/memoryUtils'\r\n//import storageUtils from '../../utils/storageUtils'\r\n//import { addPostcssPlugins } from 'customize-cra';\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../redux/actions'\r\n\r\nclass Login extends Component {\r\n   onFinish = async(values)=>{\r\n    const{username, password}=values\r\n    //调用分发异步action的函数=>发登陆的异步请求，有了结果后更新状态\r\n     this.props.login(username, password)\r\n\r\n{/*}        const result = await allReq.reqLogin(username, password)\r\n        //const result = response.data //{status:0, data: user} {status:1,msg:\"xxx\"}\r\n        if (result.status === 0){ //登陆成功\r\n         message.success('登陆成功')\r\n         // 保存user\r\n         const user = result.data\r\n         memoryUtils.user = user //保存在内存中\r\n         storageUtils.saveUser(user)//保存到local中\r\n         // 跳转到管理界面（不需要回退到登陆）\r\n          this.props.history.replace('/home')\r\n        \r\n        } else { //登录失败  提示错误信息}\r\n          message.error(result.msg)\r\n        }\r\n      */}\r\n      } \r\n\r\n\r\n    onFinishFailed = (values, errorFields, outOfDate) => {\r\n      //console.log(\"校验失败\");\r\n      values.errorFields.map((x) => {\r\n        return console.log(x.errors);\r\n      });\r\n   }\r\n   \r\n    render() {\r\n        \r\n\r\n        //如果用户已经登陆 自动跳转到管理界面\r\n     const user =this.props.user\r\n      if (user && user._id){ \r\n        return <Redirect to ='/home'/>\r\n       }\r\n      const errorMsg=this.props.user.errorMsg\r\n         const layout = {\r\n               labelCol: {\r\n              span: 80,\r\n                },\r\n                wrapperCol: {\r\n                  span: 30,\r\n                },\r\n         }\r\n\r\n          const tailLayout = {\r\n            wrapperCol: {\r\n              offset: 80,\r\n              span: 10,\r\n            },\r\n          };\r\n           \r\n        return (\r\n            <div className=\"login\">\r\n            <header className=\"login-header\">\r\n              <img src={logo} alt= \"logo\"/>\r\n              <h1>react project： Backstage Management System </h1>\r\n            </header>\r\n            <section className= \"login-content\">\r\n              <div>{errorMsg} </div>\r\n                <h2>User Login</h2>\r\n                \r\n    <Form {...layout}\r\n    name=\"normal_login\"\r\n    className=\"login-form\"\r\n    initialValues={{\r\n      remember: true,\r\n    }}\r\n    onFinish={this.onFinish}\r\n    onFinishFailed={this.onFinishFailed}\r\n  >\r\n    \r\n    \r\n    \r\n      <Form.Item\r\n        label=\"Username\" \r\n        name=\"username\" \r\n        rules={[\r\n          {required: true, message: 'Please input your username!'},\r\n          {min:4, message:'用户名至少4位'},\r\n          {max:12, message:'用户名不能超过12位'},\r\n          {pattern: /[!^a-zA-Z0-9_]+$/, message:'必须是英文.数字或下划线组成'} \r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Password\" \r\n        name=\"password\"\r\n        rules={[\r\n          {required: true, message: 'Please input your password!'},\r\n          {min:4, message:'密码至少4位'},\r\n          {max:12, message:'密码不能超过12位'},\r\n          {pattern: /[!^a-zA-Z0-9_]+$/, message:'必须是英文.数字或下划线组成'} \r\n        ]}\r\n      > \r\n       <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n        <Checkbox>Remember me</Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-buttom\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n            </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//const WrapLogin = Form.create()(Login)\r\n//export default WrapLogin\r\n\r\n//export default connect((state) => ({ user: state.user }), { login })(Login);\r\n/* 1前台表单验证\r\n   2 收集表单输入数据\r\n*/\r\n\r\nexport default connect(\r\n  state=>({user:state.user}),\r\n  {login}\r\n)(Login);\r\n\r\n\r\n","import {HomeOutlined,AppstoreAddOutlined,BarsOutlined,ToolOutlined,UserOutlined,SafetyOutlined,AreaChartOutlined,BarChartOutlined,PieChartFilled,LineChartOutlined} from '@ant-design/icons';\r\n\r\nconst menuList = [\r\n  {\r\n    title: \"home\", // 菜单标题名称\r\n    key: \"/home\", // 对应的 path\r\n    icon: <HomeOutlined/>, // 图标名称\r\n    isPublic:true,// 公开的\r\n  },\r\n  {\r\n    title: \"product\",\r\n    key: \"/products\",\r\n    icon: <AppstoreAddOutlined />,\r\n    children: [\r\n      // 子菜单列表\r\n      {\r\n        title: \"category\",\r\n        key: \"/category\",\r\n        icon: <BarsOutlined />,\r\n      },\r\n      {\r\n        title: \"product management\",\r\n        key: \"/product\",\r\n        icon: <ToolOutlined />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"user management\",\r\n    key: \"/user\",\r\n    icon: <UserOutlined />,\r\n  },\r\n  {\r\n    title: \"role management\",\r\n    key: \"/role\",\r\n    icon: <SafetyOutlined />,\r\n  },\r\n  {\r\n    title: \"charts\",\r\n    key: \"/charts\",\r\n    icon: <AreaChartOutlined/>,\r\n    children: [\r\n      {\r\n        title: \"bar\",\r\n        key: \"/charts/bar\",\r\n        icon: <BarChartOutlined/>,\r\n      },\r\n      {\r\n        title: \"line\",\r\n        key: \"/charts/line\",\r\n        icon: <LineChartOutlined/>,\r\n      },\r\n      {\r\n        title: \"pie\",\r\n        key: \"/charts/pie\",\r\n        icon: <PieChartFilled/>,\r\n      },\r\n    ],\r\n  },\r\n];\r\nexport default menuList;","import React, { Component } from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport logo from '../../assets/images/logo.png'\r\n//import memoryUtils from '../../utils/memoryUtils'\r\nimport { Menu } from 'antd';\r\nimport {connect} from 'react-redux'\r\nimport {setHeadTitle} from '../../pages/redux/actions'\r\nimport {\r\n  AppstoreOutlined,\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  PieChartOutlined,\r\n  DesktopOutlined,\r\n  ContainerOutlined,\r\n  MailOutlined,\r\n  ControlFilled,\r\n} from '@ant-design/icons';\r\nimport menuList from '../../config/menuConfig'\r\nimport './index.less'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\n/*\r\n左侧导航组件\r\n*/\r\n class LeftNav extends Component {\r\n\r\n  //判断当前登陆用户对item是否有权限\r\n  hasAuth = (item) => {\r\n    const key = item.key\r\n    const menus = this.props.user.role.menus\r\n    const username =this.props.user.username\r\n    /** \r\n     * 1.如果当前用户是admin，无需判断\r\n     * 2.如果当前item是公开的\r\n     * 3.当前用户有此item的权限:key有没有在menus中\r\n    */\r\n\r\n    if (username === 'admin' || item.isPublic || menus.indexOf(key) !== -1) {\r\n      return true\r\n    } else if (item.children) {\r\n      //4.如果当前用户有此item的某个子item的权限\r\n      return !!item.children.find(child => menus.indexOf(child.key) !== -1)\r\n    }\r\n    return false\r\n  }\r\n\r\n\r\n/*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用map（）+ 递归调用\r\n*/\r\n    getMenuNodes=(menuList) => {\r\n      // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname\r\n\r\n       return menuList.map((item)=>{\r\n         // 如果当前用户有item对应的权限，才需要显示对应的菜单项\r\n  if ( this.hasAuth(item) ) {\r\n        \r\n\r\n\r\n\r\n    /*\r\n  {\r\n    title: \"首页\", // 菜单标题名称\r\n    key: \"/home\", // 对应的 path\r\n    icon: <HomeOutlined/>, // 图标名称\r\n    children:[],// 可能有也可能没有\r\n  }\r\n  <Menu.Item key=\"/home\" icon={<PieChartOutlined />}>\r\n           <Link to ='/home'>\r\n            首页\r\n           </Link>\r\n          </Menu.Item>\r\n   <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"商品\">\r\n            <Menu.Item key=\"/category\" icon={<MailOutlined />}>\r\n            <Link to ='/category'>\r\n                品类管理\r\n            </Link>    \r\n            </Menu.Item>\r\n    */\r\n    if(!item.children){\r\n      //判断item是否是当前对应的item\r\n       if (item.key===path || path.indexOf(item.key)===0){\r\n       //更新redux中的headerTitle状态 \r\n        this.props.setHeadTitle(item.title)\r\n       }\r\n\r\n        return(\r\n            <Menu.Item key={item.key} icon={item.icon}>\r\n           <Link to ={item.key} onClick={()=>this.props.setHeadTitle(item.title)}>\r\n            {item.title}\r\n           </Link>\r\n          </Menu.Item>\r\n        ) ;\r\n    } else {\r\n      \r\n      //查找一个与当前请求路径匹配的子item\r\n      const cItem = item.children.find(cItem =>path.indexOf(cItem.key)===0)\r\n      //如果存在， 说明当前item的子列表需要打开\r\n      if (cItem){\r\n        this.openKey = item.key\r\n      }\r\n      \r\n        return (\r\n        <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n           {this.getMenuNodes(item.children)}\r\n         </SubMenu>\r\n      )\r\n    }\r\n  }\r\n        return 0\r\n       })\r\n    }\r\n  //在第一次render（）之前执行一次 为第一个render()准备数据（必须同步的）\r\n   UNSAFE_componentWillMount(){\r\n     this.menuNodes = this.getMenuNodes(menuList)\r\n   }\r\n\r\n    render() {\r\n    //debugger\r\n    // 得到当前请求的路由路径\r\n    let path = this.props.location.pathname\r\n    console.log('render()', path)\r\n    if (path.indexOf('/product')===0) {\r\n      //当前请求的是商品或其子路由界面\r\n      path = '/product'\r\n    }\r\n\r\n\r\n    // 得到需要打开菜单项的key\r\n    const openKey= this.openKey\r\n        return (\r\n\r\n        <div>\r\n            <div className=\"left-nav\">\r\n                <Link to='/' className=\"left-nav-header\">\r\n                    <img src={logo} alt=\"logo\"/>\r\n                    <h1>硅谷后台</h1>\r\n                </Link>\r\n            \r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          defaultOpenKeys={[openKey]}\r\n          selectedKeys = { [path] }\r\n        >\r\n            \r\n         {/*<Menu.Item key=\"/home\" icon={<PieChartOutlined />}>\r\n           <Link to ='/home'>\r\n            首页\r\n           </Link>\r\n          </Menu.Item>\r\n          \r\n          <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"商品\">\r\n            <Menu.Item key=\"/category\" icon={<MailOutlined />}>\r\n            <Link to ='/category'>\r\n                品类管理\r\n            </Link>    \r\n            </Menu.Item>\r\n            <Menu.Item key=\"/product\" icon={<MailOutlined />}>\r\n            <Link to ='/product'>\r\n                商品管理\r\n            </Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n\r\n          <Menu.Item key=\"/user\" icon={<PieChartOutlined />}>\r\n           <Link to ='/user'>\r\n            用户管理\r\n           </Link>\r\n          </Menu.Item>\r\n          \r\n          <Menu.Item key=\"/role\" icon={<PieChartOutlined />}>\r\n           <Link to ='/role'>\r\n            角色管理\r\n           </Link>\r\n         </Menu.Item>\r\n         */}\r\n\r\n         {\r\n            this.menuNodes\r\n         }\r\n        </Menu>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件：\r\n包装非路由组件，返回一个新的组件\r\n新的组向非路由组件传递三个属性：history/location/match\r\n*/\r\nexport default connect (\r\n  state=>({user: state.user}),{setHeadTitle}\r\n)(withRouter(LeftNav))\r\n","import React, { Component } from 'react'\r\nimport './index.less'\r\n/*\r\n外形像链接的按钮\r\n*/\r\n\r\n\r\nexport default class LinkButton extends Component {\r\n    render() {\r\n        return (\r\n            <button {...this.props} className='link-button'></button>\r\n        )\r\n    }\r\n}","\r\n/*\r\n包含 n 个日期时间处理的工具函数模块\r\n*/\r\n/*格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n\tif (!time) return ''\r\n\tlet date = new Date(time)\r\n\treturn date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n\t+ ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n\t}","import React, { Component } from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {Modal} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport { ExclamationCircleOutlined ,CloudOutlined} from '@ant-design/icons';\r\nimport allReq from '../../api'\r\nimport menuList from '../../config/menuConfig'\r\nimport LinkButton from \"../LinkButton/index\";\r\nimport {formateDate} from '../../utils/dateUtils'\r\n//import memoryUtils from '../../utils/memoryUtils'\r\n//import storageUtils from '../../utils/storageUtils'\r\nimport './index.less'\r\nimport {logout} from '../../pages/redux/actions'\r\n/*\r\n左侧导航组件\r\n*/\r\n class Header extends Component {\r\n    \r\n    state={\r\n        currentTime:formateDate(Date.now()),//当前时间字符串\r\n        weather:'', // 天气的文本\r\n    };\r\n     \r\n    getTime=()=>{\r\n     //每隔1秒获取当前时间，并更新状态数据currentTime\r\n     this.intervalId = setInterval(()=>{\r\n         const currentTime=formateDate(Date.now())\r\n         this.setState({currentTime})\r\n     },1000)\r\n    }\r\n    \r\n    getWeather=async()=>{\r\n        //调用接口请求函数获取数据\r\n        const {weather} =await allReq.reqWeather('上海')\r\n        //更新状态\r\n        this.setState({weather})\r\n\r\n    }\r\n\r\n    getTitle=()=>{\r\n         //得到当前请求路径\r\n        const path= this.props.location.pathname\r\n        let title \r\n         menuList.forEach(item=> {\r\n             if(item.key === path){//如果当前item对象的key与path一样， item的title就是需要显示的title\r\n                title = item.title\r\n             } else if (item.children){\r\n                 //在所有的子item中查找匹配的\r\n                const cItem= item.children.find(cItem=> cItem.key === path)\r\n                  //如果有值才说明有匹配的\r\n                if(cItem){ \r\n                    // 取出他的title\r\n                      title = cItem.title\r\n                  }\r\n             }\r\n         })\r\n         return title\r\n    }\r\n    /*\r\n    退出登录\r\n    */\r\n    logout = () =>{\r\n        //显示确认框\r\n        Modal.confirm({\r\n            title: 'Confirm',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: 'Are you sure you want to exit?',\r\n            onOk:()=>{\r\n              this.props.logout()\r\n               //console.log('ok111', this)\r\n               //删除保存的user数据 \r\n\r\n               //storageUtils.removeUser()\r\n               //memoryUtils.User={}\r\n               //跳转到login\r\n               //this.props.history.replace('/login')    \r\n                      \r\n            },\r\n            onCancel() {\r\n              console.log('Cancel')}\r\n           \r\n          });\r\n    }\r\n    /*\r\n        第一次render（）之后执行一次\r\n        一般在此执行一步操作：发ajax请求。启动定时器\r\n    */\r\n\r\n    componentDidMount(){\r\n       //获取当前时间\r\n        this.getTime()\r\n      //获取当前天气\r\n      this.getWeather();\r\n    }\r\n    \r\n    /*\r\n    当前组件卸载之前调用\r\n     */\r\n    componentWillUnmount(){\r\n    //清除定时器\r\n     clearInterval(this.intervalId);\r\n    }\r\n   \r\n    render() {\r\n\r\n        const { currentTime, weather } = this.state;\r\n        const username = this.props.user.username;\r\n        // 得到当前需要显示的title\r\n        const title= this.props.headTitle\r\n\r\n        return (\r\n            <div className= \"header\">\r\n              < div className=\"header-top\">\r\n                <span> Welcome，{username} </span> \r\n                <LinkButton onClick = {this.logout}>Logout</LinkButton>\r\n              </div>\r\n              \r\n              < div className=\"header-bottom\">\r\n                < div className=\"header-bottom-left\">\r\n                  {title}\r\n                </div>\r\n                < div className=\"header-bottom-right\">\r\n                  <span>{currentTime}</span>\r\n                  <CloudOutlined\r\n              style={{ width: \"30px\", height: \"20px\", margin: \"15 15 15 15\" }}\r\n                 />\r\n                 \r\n                 <span>{weather}</span>\r\n               </div>\r\n              </div>\r\n             </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(\r\n  state=>({headTitle:state.headTitle, user:state.user}),{logout}\r\n)(withRouter(Header))","import React, { Component } from 'react'\r\nimport './home.less'\r\n/*\r\n首页路由\r\n*/\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                Welcome to use Backstage Management System \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Input, Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\n\r\n//添加分类的form组件\r\nclass AddForm extends Component {\r\n  formRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired,\r\n    categorys: PropTypes.array.isRequired, //接收一级分类的数组\r\n    parentId: PropTypes.string.isRequired, //接受父分类的Id\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(this.formRef);\r\n    this.props.setForm(this.formRef.current);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Form ref={this.formRef}>\r\n        <Form.Item>\r\n          {/* ---请注意在此处，如果表单里包括了Input/Select(即一个表单里有多个控件),可以使用内嵌的Form.Item完成,\r\n          你可以给 Form.Item 自定义 style 进行内联布局，或者添加 noStyle 作为纯粹的无样式绑定组件\r\n          具体情况可以参考官方文档，见下方链接\r\n          https://ant.design/components/form-cn/#components-form-demo-complex-form-control\r\n          */}\r\n          <p>category:</p>\r\n          <Form.Item\r\n            noStyle\r\n            name=\"parentId\"\r\n            initialValue={this.props.parentId}>\r\n            <Select value={this.props.parentId} style={{ width: \"100%\" }}>\r\n              <Option value='0'>first category</Option>\r\n              {\r\n                this.props.categorys.map((item) => {\r\n                  return <Option key={item._id} value={item._id}>{item.name}</Option>\r\n                })\r\n              }\r\n            </Select>\r\n          </Form.Item>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <p>category name:</p>\r\n          {/* 此处有坑 */}\r\n          {/* ----注意 <Form.Item /> 只会对它的直接子元素绑定表单功能 */}\r\n          <Form.Item\r\n            noStyle\r\n            name=\"categoryName\"\r\n            rules={[\r\n              { required: true, message: 'category name required' },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Please enter category name\" />\r\n          </Form.Item>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddForm;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Input } from 'antd'\r\n\r\n\r\n\r\n//更新分类的form组件\r\nclass UpdateForm extends Component {\r\n\r\n  formRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    categoryName: PropTypes.string.isRequired,\r\n    setForm: PropTypes.func.isRequired\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   // console.log(this.formRef);\r\n  //   // this.props.setForm(this.formRef.current);\r\n  // }\r\n\r\n  componentDidMount() {\r\n    // console.log(this.formRef);将form对象通过setForm（）传递给父组件\r\n    this.props.setForm(this.formRef.current);\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { categoryName } = this.props\r\n    return (\r\n      <Form ref={this.formRef}>\r\n        <Form.Item\r\n          name=\"categoryName\"\r\n          initialValue={categoryName}\r\n          rules={[\r\n            { required: true, message: 'categart name required' },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"please enter categary name\" />\r\n        </Form.Item>\r\n      </Form >\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateForm;","\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Card,\r\n  Table,\r\n  Button,\r\n  message,\r\n  Modal\r\n} from 'antd';\r\nimport { ArrowRightOutlined } from '@ant-design/icons'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport LinkButton from '../../components/LinkButton'\r\nimport allReq from '../../api'\r\nimport AddForm from './AddForm' \r\nimport UpdateForm from './UpdateForm'\r\n\r\nclass Category extends Component {\r\n\r\n  state = {\r\n    loading: false,\r\n    categorys: [],//一级分类列表\r\n    subCategorys: [],//二级分类列表\r\n    parentId: '0', //当前需要显示的分类列表的父分类ID\r\n    parentName: '', //当前需要显示的分类列表的父分类名称\r\n    showStatus: 0, //标识添加/更新的确认框是否显示 --- 0:都不显示，1:显示添加，2:显示更新\r\n  }\r\n\r\n  //初始化Table所有列的数组\r\n  initColumns = () => {\r\n    return this.columns = [\r\n      {\r\n        title: 'Category name',\r\n        dataIndex: 'name', //显示数据对应的属性名\r\n      },\r\n      {\r\n        title: 'Management',\r\n        width: 500, //此处可以不加px，如果加了px，需要写成‘800px’字符串的形式\r\n        dataIndex: '',\r\n        key: 'x',\r\n        render: (category) => ( //返回需要显示的界面标签\r\n          <span>\r\n            <LinkButton onClick={() => { this.showUpdate(category) }}>update category</LinkButton>\r\n            {/* 如何向事件回调函数传递参数:先定义一个匿名函数，在函数调用处理的函数并传入数据 */}\r\n            {\r\n              this.state.parentId === '0' ? <LinkButton onClick={() => { this.showSubCategorys(category) }}>showSubCategorys</LinkButton > : null\r\n            }\r\n\r\n          </span>\r\n        ),\r\n      }\r\n\r\n    ];\r\n  }\r\n\r\n  //异步获取一级/二级分类列表显示\r\n  //parentId：如果没有指定，则根据状态中的parentId请求，如果指定了则根据指定的请求\r\n  getCategorys = async (parentId) => {\r\n    //此处注意一定要注意编写的顺序，如果getCategorys（）传了参数，首选参数，如果没传，才选择this.state.parentId；两者顺序不同，效果也不同\r\n    parentId = parentId || this.state.parentId\r\n    //再发请求之前，显示loading\r\n    this.setState({ loading: true })\r\n    const result = await allReq.reqCategorys(parentId)\r\n    //在请求完成后，关闭loading\r\n    this.setState({ loading: false })\r\n    if (result.status === 0) {\r\n      //更新分类数组(可能是一级的也可能是二级的)\r\n      if (parentId === '0') {\r\n        this.setState({ categorys: result.data })\r\n      } else {\r\n        this.setState({ subCategorys: result.data })\r\n      }\r\n\r\n    } else {\r\n      message.error(\"获取分类列表失败\")\r\n    }\r\n  }\r\n\r\n  //显示指定一级分类对象的二级子列表\r\n  showSubCategorys = (category) => {\r\n    //setState()不能立即获取最新的状态，因为setState()是异步更新状态\r\n    this.setState({\r\n      parentId: category._id,\r\n      parentName: category.name\r\n    }, () => { //在状态更新且重新render()后执行\r\n      //显示二级分类列表显示\r\n      this.getCategorys()\r\n    })\r\n  }\r\n\r\n  //显示指定一级分类列表\r\n  showCategorys = () => {\r\n    this.setState({\r\n      parentId: '0',\r\n      parentName: \"\",\r\n      subCategorys: []\r\n    })\r\n  }\r\n\r\n  //添加/更新对话框点击取消时----隐藏\r\n  handleCancel = () => {\r\n    //清除输入数据\r\n    this.form.resetFields()\r\n    this.setState({\r\n      showStatus: 0\r\n    })\r\n  }\r\n\r\n  //显示添加确认框\r\n  showAdd = () => {\r\n    this.setState({\r\n      showStatus: 1\r\n    })\r\n  }\r\n  //添加分类\r\n  addCategory = async () => {\r\n    this.form.validateFields().then(async (values) => {\r\n      //隐藏确认框\r\n      this.setState({\r\n        showStatus: 0,\r\n      })\r\n\r\n      //准备数据,并提交添加分类的请求\r\n      const { parentId, categoryName } = values\r\n      // console.log(parentId, categoryName);\r\n      // debugger\r\n      // const parentId = this.form.getFieldValue('parentId')\r\n      // const categoryName = this.form.getFieldValue('categoryName')\r\n\r\n      //清除输入数据\r\n      this.form.resetFields()\r\n\r\n\r\n      const result = await allReq.reqAddCategory(categoryName, parentId)\r\n\r\n      if (result.status === 0) {\r\n        //添加的分类就是当前分类列表下的分类\r\n        if (parentId === this.state.parentId) {\r\n          this.getCategorys()\r\n        } else if (parentId === '0') {\r\n          //在二级分类列表下添加一级分类，重新获取一级分类列表,但不需要显示以及列表\r\n          this.getCategorys('0')\r\n        }\r\n\r\n      }\r\n    })\r\n      .catch((err) => {\r\n        message.info('请输入分类名称')\r\n      })\r\n\r\n  }\r\n\r\n  //显示更新的确认框\r\n  showUpdate = (category) => {\r\n    //保存分类对象\r\n    this.category = category\r\n    this.setState({\r\n      showStatus: 2,\r\n    })\r\n  }\r\n  //更新分类\r\n  updateCategory = () => {\r\n    //进行表单验证，只有通过了才处理\r\n    this.form.validateFields().then(async (values) => {\r\n      //1.隐藏确认框\r\n      this.setState({\r\n        showStatus: 0,\r\n      })\r\n\r\n      //准备数据\r\n      const categoryId = this.category._id\r\n      // const categoryName = this.form.getFieldValue('categoryName')\r\n      const { categoryName } = values\r\n      //清除输入数据\r\n      this.form.resetFields()\r\n\r\n      //2.发送请求更新分类\r\n      const result = await allReq.reqUpdateCategory(categoryId, categoryName)\r\n\r\n      if (result.status === 0) {\r\n        //3.重新显示列表\r\n        this.getCategorys()\r\n      }\r\n    })\r\n      .catch((err) => {\r\n        message.info(\"请输入分类名称\");\r\n      })\r\n\r\n  }\r\n\r\n  //为第一次render()准备数据\r\n  UNSAFE_componentWillMount() {\r\n    this.initColumns()\r\n  }\r\n\r\n  //执行异步任务:发异步ajax请求\r\n  componentDidMount() {\r\n    this.getCategorys()\r\n  }\r\n  render() {\r\n\r\n    const extra = (\r\n      <Button type='primary' icon={<PlusOutlined />} onClick={this.showAdd}>\r\n        add\r\n      </Button >\r\n    )\r\n\r\n    //读取状态数据\r\n    const { categorys, subCategorys, parentId, parentName, loading, showStatus } = this.state\r\n\r\n    //读取指定的分类\r\n    const category = this.category || { name: '' }//如果还没有数据，则指定一个空对象\r\n\r\n    const title = parentId === '0' ? \"first class list\" : (\r\n      <span>\r\n        <LinkButton onClick={this.showCategorys}>first class list</LinkButton>\r\n        <ArrowRightOutlined style={{ marginRight: 5 }} />\r\n        <span>{parentName}</span>\r\n      </span>\r\n    )\r\n\r\n\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          dataSource={parentId === '0' ? categorys : subCategorys}\r\n          columns={this.columns}\r\n          bordered\r\n          rowKey='_id'\r\n          pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n          loading={loading}\r\n        />;\r\n        {\r\n          showStatus === 1 ? <Modal\r\n            title=\"Add category\"\r\n            visible={showStatus === 1}\r\n            onOk={this.addCategory}\r\n            onCancel={this.handleCancel}>\r\n            <AddForm\r\n              categorys={categorys}\r\n              parentId={parentId}\r\n              setForm={form => this.form = form}\r\n            />\r\n          </Modal> : null\r\n        }\r\n        {showStatus === 2 ? <Modal\r\n          title=\"Update category\"\r\n          visible={showStatus === 2}\r\n          onOk={this.updateCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <UpdateForm\r\n            categoryName={category.name}\r\n            setForm={form => this.form = form}\r\n          />\r\n        </Modal> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Category;\r\n","//包含一些常量值得模块\r\n\r\nexport const PAGE_SIZE=3 //每页显示的记录数\r\n\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/'; //上传图片的基础路径","import React, { Component } from 'react'\r\nimport {Select,Input, Button,Table,Card,message} from 'antd'\r\nimport {PlusCircleOutlined} from '@ant-design/icons';\r\nimport LinkButton from '../../components/LinkButton'\r\nimport allReq from '../../api/index'\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\nconst Option = Select.Option\r\n//product的默认子路由组件\r\nexport default class ProductHome extends Component { \r\n    \r\n    state={\r\n        total: 0, //商品的总数量\r\n        products:[],// 商品的数组\r\n        loading: false,//是否正在加载中\r\n        searchName:''  ,// 搜索的关键字\r\n        searchType:'productName' //根据那哪个字段搜索\r\n    }\r\n\r\n // 初始化table的列的数组\r\n   initColumns=()=>{\r\n   this.columns = [\r\n      {\r\n        title: 'Product Name',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: 'Product Describe',\r\n        dataIndex: 'desc',\r\n      },\r\n      {\r\n        title: 'Price',\r\n        dataIndex: 'price', \r\n        render : (price) =>'$' + price  //当前指定了对应的属性，传入的是对应的属性值         \r\n      },\r\n      \r\n      \r\n      {\r\n        width:100,\r\n        title: 'Status',\r\n        //dataIndex: 'status', \r\n        render : (product) => {\r\n          const {status, _id} = product\r\n           return( \r\n            <span>\r\n            <Button\r\n              type='primary'\r\n              onClick={() => {\r\n                \r\n                this.updateStatus(_id, status === 1 ? 2 : 1)\r\n              }}\r\n            >\r\n              {status === 1 ? 'out of stock' : 'in stock'}\r\n            </Button>\r\n            <span>{status === 1 ? 'available' : 'out of stock'}</span>\r\n          </span>\r\n         ) \r\n        }\r\n      },\r\n\r\n\r\n      {\r\n        width:100,\r\n        title: 'Management',\r\n        width: 150,\r\n        render: (product) => {\r\n          return (\r\n            <span>\r\n              {/* 将product对象作为state传递给目标路由组件 */}\r\n              <LinkButton onClick={() => this.props.history.push('/product/detail', {product})}>Detail</LinkButton>\r\n              <LinkButton onClick={() => this.props.history.push('/product/addupdate', product)}>Edit</LinkButton>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n   }\r\n   \r\n\r\n  //获取指定页码的列表数据显示\r\n  getProducts =  async(pageNum) => {\r\n    this.pageNum=pageNum //保存pageNum 让其他方法可以看到\r\n    this.setState({laoding: true}) //显示loading\r\n    const{searchName, searchType}= this.state\r\n    let result\r\n    //如果搜索关键字有值， 我要要做搜索分页\r\n    if(searchName){\r\n       result= await allReq.reqSearchProduct({pageNum, pageSize: PAGE_SIZE,searchName, searchType })\r\n    } else{//一般分页请求\r\n       result= await allReq.reqProducts(pageNum, PAGE_SIZE )\r\n    }\r\n        \r\n    this.setState({laoding: false}) //隐藏loading\r\n    if (result.status===0){     \r\n      //取出分页数据，更新状态，显示分页列表\r\n      const{total,list}=result.data\r\n      this.setState({\r\n        total,\r\n        products: list\r\n      })\r\n    }\r\n  }\r\n\r\n  //更新指定商品的状态\r\n  updateStatus= async(productId, status) =>{\r\n    const result = await allReq.reqUpdateStatus(productId, status)\r\n    //console.log(221)\r\n    if(result.status===0){\r\n      message.success('product updated')\r\n      this.getProducts(this.pageNum)\r\n    }\r\n  }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.initColumns()\r\n      }\r\n\r\n    componentDidMount(){\r\n      this.getProducts(1)\r\n     // console.log(111)\r\n    }\r\n    render() {\r\n          \r\n        //取出状态数据\r\n        const{products, total, loading, searchType, searchName}=this.state\r\n         \r\n          \r\n          \r\n\r\n        const title= (\r\n            <span> \r\n               <Select value={searchType} style={{width:130}} \r\n                       onChange={value=>this.setState({searchType: value})}>\r\n                   <Option value='productName'> By name</Option>\r\n                   <Option value='productDesc'> By description</Option>\r\n               </Select> \r\n               <input placeholder='Key words' \r\n                  style={{width:200, margin:'0 15px'}} \r\n                  value={searchName}\r\n                  onChange={event=>this.setState({searchName: event.target.value})}\r\n               />\r\n               <Button type='primary' onClick={()=>this.getProducts(1)}> search </Button>\r\n            </span>\r\n            )\r\n        const extra=(\r\n            <Button type='promary' onClick={()=> this.props.history.push('/product/addupdate')}>\r\n               <PlusCircleOutlined/>\r\n               Add Item\r\n            </Button>\r\n        )\r\n\r\n\r\n            return (             \r\n             \r\n            <Card title={title} extra={extra}>\r\n                <Table \r\n                bordered\r\n                rowKey='_id'\r\n                loading={loading}\r\n                dataSource={products} \r\n                columns={this.columns} \r\n                pagination={{\r\n                current: this.pageNum,\r\n                total, \r\n                defaultPageSize:PAGE_SIZE, \r\n                showQuickJumper : true,\r\n                onChange: this.getProducts}}                \r\n                />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React  from 'react'\r\nimport { Upload, Modal, message } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport allReq from '../../api';\r\nimport { BASE_IMG_URL } from '../../utils/constants'\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n//用于图片上传的组件\r\nexport default class PicturesWall extends React.Component {\r\n    static propsTypes = {\r\n        imgs: PropTypes.array\r\n      }\r\n     \r\n    state = {\r\n    previewVisible: false,//标识是否显示大图预览\r\n    previewImage: '',//大图的url\r\n    previewTitle: '',\r\n    fileList: [\r\n     /* {\r\n        uid: '-1',   //每个file都有一个唯一的id\r\n        name: 'image.png',\r\n        status: 'done',\r\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n      },\r\n     \r\n      {\r\n        uid: '-xxx',\r\n        percent: 50,\r\n        name: 'image.png',\r\n        status: 'done',\r\n        url: 'https://image.baidu.com/search/detail?ct=503316480&z=0&ipn=d&word=thinkpad&step_word=&hs=0&pn=17&spn=0&di=49610&pi=0&rn=1&tn=baiduimagedetail&is=0%2C0&istype=0&ie=utf-8&oe=utf-8&in=&cl=2&lm=-1&st=undefined&cs=4220684073%2C3540905256&os=2916720095%2C793155767&simid=3063763573%2C3719130762&adpicid=0&lpn=0&ln=1864&fr=&fmq=1624661102373_R&fm=&ic=undefined&s=undefined&hd=undefined&latest=undefined&copyright=undefined&se=&sme=&tab=0&width=undefined&height=undefined&face=undefined&ist=&jit=&cg=&bdtype=0&oriquery=&objurl=https%3A%2F%2Fgimg2.baidu.com%2Fimage_search%2Fsrc%3Dhttp%3A%2F%2Fcdn.178hui.com%2Fupload%2F2018%2F0730%2F17213663222.jpg%26refer%3Dhttp%3A%2F%2Fcdn.178hui.com%26app%3D2002%26size%3Df9999%2C10000%26q%3Da80%26n%3D0%26g%3D0n%26fmt%3Djpeg%3Fsec%3D1627253204%26t%3D86f876db11b90a6e04e37baa71c72d2d&fromurl=ippr_z2C%24qAzdH3FAzdH3Fooo_z%26e3B80bi7t_z%26e3Bv54AzdH3Fz14AzdH3Fetjo-8nbdb9d_z%26e3Bip4s&gsm=13&rpstart=0&rpnum=0&islist=&querylist=&nojc=undefined',\r\n      },\r\n      {\r\n        uid: '-5',\r\n        name: 'image.png',\r\n        status: 'error',\r\n      },*/\r\n    ],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    let fileList = []\r\n\r\n    const { imgs } = this.props\r\n\r\n    if (imgs && imgs.length > 0) {\r\n      fileList = imgs.map((img, index) => ({\r\n        uid: -index, //每个file都有自己唯一的id\r\n        name: img, //图片文件名\r\n        status: 'done',//图片状态：done已上传，uploading， removed\r\n        url: BASE_IMG_URL + img\r\n      }))\r\n    }\r\n    //初始化状态\r\n    this.state = {\r\n    previewVisible: false,\r\n    previewImage:'',\r\n      fileList: fileList//获取所有已上传图片文件名的数组\r\n    }\r\n  }\r\n\r\n  getImgs = () => {\r\n    const { fileList } = this.state\r\n    return fileList.map(file => {\r\n      return file.name\r\n    })\r\n  }\r\n\r\n\r\n\r\n//隐藏modal\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n\r\n  /**\r\n   * fileList:所有已上传图片文件对象的数组\r\n   * file:当前操作的图片文件(上传/删除)\r\n   */\r\n   handleChange = async ({ file, fileList }) => {\r\n    /**\r\n     * ====注意\r\n     * 在此处，视频中的antdV3版本中，当前上传的对象是不等于数组的最后一个对象的\r\n     * 而在V4中，已经修复，此处是相等的\r\n     */\r\n    // console.log('@@@', file.status, fileList.length, file === fileList[fileList.length - 1], file);\r\n\r\n    //一旦上传成功，将当前上传的file的信息修正(name,url)\r\n    if (file.status === 'done') {\r\n      const result = file.response //data: {name: \"image-1621649168570.jpg\", url: \"http://localhost:5000/upload/image-1621649168570.jpg\"} status: 0\r\n      if (result.status === 0) {\r\n        message.success('upload sucess')\r\n        const { name, url } = result.data\r\n        file.name = name\r\n        file.url = url\r\n      } else {\r\n        message.error('fail to upload')\r\n      }\r\n    } else if (file.status === 'removed') {\r\n      // console.log(file);\r\n      const result = await allReq.reqDeleteImg(file.name)\r\n      if (result.status === 0) {\r\n        message.success('picture deleted')\r\n      } else {\r\n        message.error('fail to delete picture')\r\n      }\r\n    }\r\n    //在操作（上传、删除）过程中更新fileList状态\r\n      this.setState({fileList})\r\n  };\r\n\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList, previewTitle } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <PlusOutlined />\r\n        <div style={{ marginTop: 8 }}>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <>\r\n        <Upload\r\n          action=\"/manage/img/upload\" //上传文件的接口地址\r\n          accept='image/*' //只接受图片格式文件\r\n          name='image'//请求参数名\r\n          listType=\"picture-card\"\r\n          fileList={fileList}//所有已上传图片文件对象的数组\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}","/*\r\n用来指定商品详情的富文本编辑器组件\r\n */\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js'\r\nimport { Editor } from 'react-draft-wysiwyg'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\n\r\nexport default class RichTextEditor extends Component {\r\n\r\n  static propTypes = {\r\n    detail: PropTypes.string\r\n  }\r\n\r\n  // state = {\r\n  //   editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n  // }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const html = this.props.detail\r\n    if (html) { //如果有值，根据html格式字符串创建一个对应的编辑对象\r\n      const contentBlock = htmlToDraft(html)\r\n      if (contentBlock) {\r\n        const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n        const editorState = EditorState.createWithContent(contentState)\r\n        this.state = {\r\n          editorState\r\n        }\r\n      }\r\n    } else {\r\n      this.state = {\r\n        editorState: EditorState.createEmpty()// 创建一个没有内容的编辑对象\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n  输入过程中实时的回调\r\n   */\r\n  onEditorStateChange = (editorState) => {\r\n    // console.log('onEditorStateChange()')\r\n    this.setState({\r\n      editorState,\r\n    })\r\n  }\r\n\r\n  getDetail = () => {\r\n    //返回输入的数据对应的html格式的文本\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n  }\r\n\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('POST', '/manage/img/upload');\r\n        xhr.setRequestHeader('Authorization', 'Client-ID XXXXX');\r\n        const data = new FormData();\r\n        data.append('image', file);\r\n        xhr.send(data);\r\n        xhr.addEventListener('load', () => {\r\n          const response = JSON.parse(xhr.responseText);\r\n          const url = response.data.url //得到图片地址\r\n          // resolve(url);\r\n          resolve({ data: { link: url } })\r\n        });\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText);\r\n          reject(error);\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  render() {\r\n    const { editorState } = this.state\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        editorStyle={{\r\n          border: '1px solid black',\r\n          minHeight: 200,\r\n          paddingLeft: 10\r\n        }}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        toolbar={{\r\n          image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport{Card, Form ,Input,Cascader, Upload, Button, message} from 'antd'\r\nimport LinkButton from '../../components/LinkButton'\r\nimport { AlipaySquareFilled, ArrowLeftOutlined } from '@ant-design/icons'\r\nimport { queryAllByAttribute } from '@testing-library/react'\r\nimport allReq from '../../api';\r\nimport PicturesWall from './pictures-wall'\r\nimport RichTextEditor from './rich-text-editor'\r\nconst {Item} = Form\r\nconst {TextArea} = Input\r\n\r\nconst options = [\r\n    {\r\n      value: 'zhejiang',\r\n      label: 'Zhejiang',\r\n      isLeaf: false,\r\n    },\r\n    {\r\n      value: 'jiangsu',\r\n      label: 'Jiangsu',\r\n      isLeaf: false,\r\n    },\r\n  ];\r\n\r\n//product的添加和更新的子路由组件\r\nexport default class ProductAddUpdate extends Component {\r\n    \r\n    state = {\r\n        options: [],\r\n      }\r\n\r\n      constructor(props) {\r\n        super(props)\r\n        this.pw = React.createRef()\r\n        this.editor = React.createRef()\r\n      }\r\n//创建用来保存ref表示的标签对象的容器\r\n      formRef = React.createRef()\r\n\r\n\r\n      initOptions = async (categorys) => {\r\n        //根据categorys生成options数组\r\n        const options = categorys.map(item => (\r\n          {\r\n            value: item._id,\r\n            label: item.name,\r\n            isLeaf: false,\r\n          }\r\n        ))\r\n    \r\n        //如果是一个二级分类商品的更新\r\n        const { isUpdate, product } = this\r\n        const { pCategoryId,categoryId } = product\r\n        if (isUpdate && pCategoryId !== '0') {\r\n          //获取对应的二级分类列表\r\n          const subCategorys = await this.getCategorys(pCategoryId)\r\n          //生成二级下拉列表的options\r\n          const childrenOptions = subCategorys.map((item) => ({\r\n            value: item._id,\r\n            label: item.name,\r\n            isLeaf: true,\r\n          }))\r\n          //找到当前商品对应的一级option对象\r\n          const targetOption = options.find(option => option.value === pCategoryId)\r\n          //关联到对应的一级option上\r\n          targetOption.children = childrenOptions\r\n        }\r\n    \r\n        //更新options状态\r\n        this.setState({\r\n          options: options\r\n        })\r\n      }\r\n      //验证价格的自定义函数\r\n    validatePrice = (rule, value) => {\r\n        //此处*1 是为了让value变成数字\r\n      if (value * 1 > 0) {\r\n          return Promise.resolve();\r\n        } else {\r\n           return Promise.reject(new Error('price must above 0'));\r\n           }\r\n        }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n   //获取一级/二级分类列表,并显示\r\n  //async函数的返回值是一个新的promise对象，promise的结果和值都是由async的结果来决定\r\n  getCategorys = async (parentId) => {\r\n    const result = await allReq.reqCategorys(parentId) //{status:0, data:categorys}\r\n   //debugger\r\n    if (result.status === 0) {\r\n      const categorys = result.data\r\n      if (parentId === '0') { //如果获取的是一级分类列表\r\n        this.initOptions(categorys)\r\n      } else {\r\n        //如果获取的是二级列表\r\n        return categorys //返回二级列表--->当前async函数返回的promise就会成功且value为categorys\r\n      }\r\n    }\r\n  }\r\n//用于加载下一级列表的回调函数\r\n   loadData =async selectedOptions => {\r\n       //得到选择的option对象\r\n    const targetOption = selectedOptions[0];\r\n       //显示loading\r\n    targetOption.loading = true;\r\n\r\n    //根据选中的分类,请求获取二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value)\r\n    // 隐藏loading\r\n    targetOption.loading = false\r\n    if (subCategorys && subCategorys.length > 0) {\r\n      //生成一个二级列表的options\r\n      const childrenOptions = subCategorys.map((item) => ({\r\n        value: item._id,\r\n        label: item.name,\r\n        isLeaf: true,\r\n      }))\r\n      //关联到当前的option上\r\n      targetOption.children = childrenOptions\r\n\r\n    } else {\r\n      //当前选中的分类没有二级分类\r\n      targetOption.isLeaf = true\r\n    }\r\n\r\n   /* // load options lazily 模拟请求异步获取二级列表数据,并更新\r\n    setTimeout(() => {\r\n      targetOption.loading = false;\r\n      targetOption.children = [\r\n        {\r\n          label: `${targetOption.label} Dynamic 1`,\r\n          value: 'dynamic1',\r\n          isLeaf:true\r\n        },\r\n        {\r\n          label: `${targetOption.label} Dynamic 2`,\r\n          value: 'dynamic2',\r\n          isLeaf:true\r\n        },\r\n      ];\r\n     */\r\n\r\n    //更新options状态\r\n      this.setState({options:[...this.state.options],\r\n    })   \r\n  };\r\n\r\n    submit = () => {\r\n        //进行表单验证\r\n        // console.log(this.formRef);\r\n        this.formRef.current.validateFields().then(\r\n          async values => {\r\n    \r\n            //1.收集数据,并封装成product对象\r\n            const { name, desc, price, categoryIds } = values\r\n            // console.log(proName, proDesc, proPrice, categoryIds);\r\n            let categoryId, pCategoryId\r\n            if (categoryIds.length === 1) {\r\n              pCategoryId = '0'\r\n              categoryId = categoryIds[0]\r\n            } else {\r\n              pCategoryId = categoryIds[0]\r\n              categoryId = categoryIds[1]\r\n            }\r\n            const imgs = this.pw.current.getImgs()\r\n            // console.log(imgs);\r\n             const detail = this.editor.current.getDetail() \r\n            // console.log(detail); \r\n            const product = {\r\n              name, desc, price, imgs, detail, pCategoryId, categoryId\r\n            }\r\n            //如果是更新需要添加_id\r\n            if (this.isUpdate) {\r\n              product._id = this.product._id\r\n            }\r\n    \r\n            //2. 调用接口请求函数去添加/更新\r\n            const result = await allReq.reqAddOrUpdateProduct(product)\r\n    \r\n            //3.根据结果提示\r\n            if (result.status === 0) {\r\n              message.success(`${this.isUpdate ? '更新' : '添加'}商品成功!`)\r\n              this.props.history.goBack()\r\n            } else {\r\n              message.error(`${this.isUpdate ? '更新' : '添加'}商品失败!`)\r\n            }\r\n    \r\n            // alert('发送ajax请求')\r\n          }\r\n        )\r\n    \r\n      }\r\n\r\n    componentDidMount() {\r\n        this.getCategorys('0')\r\n      }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        // 取出携带的state\r\n        const product = this.props.location.state  // 如果是添加没值, 否则有值\r\n        // 保存是否是更新的标识\r\n        this.isUpdate = !!product\r\n        //保存商品信息----如果没有，保存的是{} ，避免报错\r\n        this.product = product || {}\r\n      }\r\n    render() {\r\n\r\n        const {isUpdate,product} = this\r\n        \r\n          const title = (              \r\n             <span>              \r\n               <ArrowLeftOutlined\r\n                  style={{ color: 'green', marginRight: 15, fontSize: 20 }}\r\n                  onClick={() => this.props.history.goBack()}\r\n                />               \r\n                 <span> {isUpdate ? 'edit product': ' Add product'}  </span>\r\n            </span>\r\n                                                 )\r\n          //指定Item布局的配置对象\r\n          const formItemLayout = {\r\n              labelCol: {//左侧label的宽度\r\n                 xs: { span: 24 },\r\n                 sm: { span: 3 },\r\n               },\r\n           wrapperCol: { //指定右侧包裹的宽度\r\n                 xs: { span: 24 },\r\n                 sm: { span: 10 }, \r\n               },\r\n            };                 \r\n\r\n            //用于接收级联商品分类ID的数组\r\n            const categoryIds = []\r\n            if (isUpdate) {\r\n              //商品是一级分类的商品\r\n              if (product.pCategoryId === '0') {\r\n                categoryIds.push(product.categoryId)\r\n              } else {\r\n                //商品是二级分类的商品\r\n                categoryIds.push(product.pCategoryId)\r\n                categoryIds.push(product.categoryId)\r\n              }\r\n        \r\n            }\r\n        \r\n\r\n        return (\r\n             <Card title={title}>\r\n                <Form {...formItemLayout} ref={this.formRef}>                   \r\n                    <Item\r\n                         label=\"Product name:\"\r\n                         name=\"name\"\r\n                         initialValue={product.name}\r\n                         rules={[\r\n                            { required: true, message: \"Must enter product's name\" }]}>\r\n                        <Input placeholder=\"Please enter product's name\"/>\r\n                    </Item>\r\n                    <Item \r\n                         label=\"Product description:\"\r\n                         name=\"desc\"\r\n                         initialValue={product.desc}\r\n                         rules={[\r\n                            { required: true, message: \"Must enter product's description\" }]}>\r\n                        <TextArea placeholder=\"Please enter product's describe\" autoSize={{ minRows: 2, maxRows: 6 }} />\r\n                    </Item>\r\n                    <Item \r\n                         label=\"Product price:\"\r\n                         name=\"price\"\r\n                         initialValue={product.price}\r\n                         rules={[\r\n                            { required: true, message: \"Must enter product's price\" },\r\n                            { validator: this.validatePrice }\r\n                            ]}>                        \r\n                        <Input type='number' placeholder= \"Please enter product's price\" addonAfter=\"CAD  \"/>\r\n                    </Item>\r\n                    <Item label= \"Product category\"  name=\"categoryIds\"  initialValue={categoryIds}\r\n                               rules={[{ required: true, message: '必须指定商品分类' },]}>\r\n                    <Cascader options={options} //需要显示的列表数据数组\r\n                               loadData={this.loadData} //当选择某个列表项，加载下一级列表的监听回调\r\n                                />\r\n                    </Item>\r\n                    <Item label= \"Product picture\">\r\n                       <PicturesWall ref={this.pw} imgs={product.imgs}/>\r\n                    </Item>\r\n                    <Item\r\n                          label=\"Product detail:\"\r\n                          labelCol={{ span: 2 }}\r\n                          wrapperCol={{ span: 15 }}\r\n                             >\r\n                         <RichTextEditor ref={this.editor} detail={product.detail} />\r\n                    </Item>\r\n                    <Item>\r\n                       <Button type='primary' onClick={this.submit}>submit</Button>\r\n                    </Item>\r\n                </Form>\r\n            \r\n\r\n\r\n             </Card>\r\n             \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport {Card, List, Icon} from 'antd'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\nimport allReq from '../../api';\r\nimport LinkButton from '../../components/LinkButton';\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\nconst Item = List.Item\r\n//product的详情子路由组件\r\nexport default class ProductDetail extends Component {\r\n   \r\n      state={\r\n          cName1:'',//一级分类名称\r\n          cName2:'',//二级分类名称\r\n      }\r\n      \r\n      async componentDidMount(){\r\n           //得到当前商品的分类ID\r\n           const{pCategoryId, categoryId} = this.props.location.state.product\r\n            if(pCategoryId===0){//一级分类下的商品\r\n               const result = await allReq.reqCategory(pCategoryId)  \r\n               const cName1= result.data.name\r\n               this.setState({cName1})\r\n            }  else {//  二级分类下的商品\r\n                /*\r\n                //通过多个await 方式发多个请求：后面的一个请求是在前一个请求成功返回之后才发送\r\n                const result1 = await allReq.reqCategory(pCategoryId) //获取一级分类列表\r\n                const result2 = await allReq.reqCategory(categoryId)  //获取二级分类列表\r\n                const cName1=result1.data.name\r\n                const cName2=result2.data.name\r\n                */\r\n\r\n                //一次性发送多个请求，只有都成功了，才正常处理\r\n                const results= await Promise.all([allReq.reqCategory(pCategoryId),allReq.reqCategory(categoryId)])\r\n                const cName1=results[0].data.name\r\n                const cName2=results[1].data.name\r\n                this.setState({\r\n                    cName1, cName2\r\n                })\r\n            }\r\n        }\r\n    \r\n    render() {\r\n        // 读取携带过来的state数据\r\n        const {name, desc, price, detail, imgs} = this.props.location.state.product\r\n        const{cName1, cName2} = this.state\r\n        const title=(\r\n            <span>              \r\n               <ArrowLeftOutlined\r\n                  style={{ color: 'green', marginRight: 15, fontSize: 20 }}\r\n                  onClick={() => this.props.history.goBack()}\r\n                />               \r\n                 Product detail \r\n            </span>\r\n         )\r\n        return (\r\n        <Card title={title} className='product-detail'>\r\n            <List>\r\n              <Item>\r\n                <span className='left'> Product name: </span>\r\n                <span> {name} </span>\r\n               </Item>\r\n            </List>\r\n            <List>\r\n              <Item>\r\n                <span className='left'> Product describe: </span>\r\n                <span>  {desc}</span>\r\n               </Item>\r\n               <Item>\r\n                <span className='left'> Product price: </span>\r\n                <span> { price} yuan </span>\r\n               </Item>\r\n               <Item>\r\n                <span className='left'> Product category: </span>\r\n                <span> {cName1} {cName2 ? '-->' + cName2 :''} {cName2} </span>\r\n               </Item>\r\n               <Item>\r\n                <span className='left'> Product picture: </span>\r\n                <span> \r\n                    {imgs.map(img=>(\r\n                       <img \r\n                       className='product-imgs'  \r\n                        key={img}\r\n                        src={BASE_IMG_URL + img}                              \r\n                        alt=\"img\"      \r\n                         />)) }\r\n                    \r\n                        \r\n                </span>\r\n               </Item>\r\n               <Item>\r\n                <span className='left'> Product detail: </span>\r\n                <span dangerouslySetInnerHTML={{__html:detail}}> \r\n                        \r\n                </span>\r\n               </Item>\r\n            </List>\r\n        </Card>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport ProductHome from './home'\r\nimport ProductAddUpdate from './add-update'\r\nimport ProductDetail from './detail'\r\nimport './product.less'\r\n\r\n/*\r\n商品路由\r\n*/\r\n\r\nexport default class Product extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                <Route path='/product' component={ProductHome} exact/> {/*路径完全匹配*/ }\r\n                <Route path='/product/addupdate' component={ProductAddUpdate} />\r\n                <Route path='/product/detail' component={ProductDetail} />\r\n                 <Redirect to ='/product'/>                                        \r\n                </Switch> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Input } from 'antd'\r\n\r\nconst { Item } = Form\r\n\r\n\r\nclass AddRole extends Component {\r\n  formRef = React.createRef()\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setForm(this.formRef.current)\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <Form ref={this.formRef}>\r\n        <Item\r\n          name=\"roleName\"\r\n          rules={[\r\n            { required: true, message: 'Role name required' }\r\n          ]}\r\n          label=\"Role Name:\"\r\n        >\r\n          <Input placeholder=\"Please enter role name\" />\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddRole;","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Input, Tree } from 'antd'\r\nimport menuList from '../../config/menuConfig'\r\n\r\nconst { Item } = Form\r\nclass AuthRole extends PureComponent {\r\n  static propTypes = {\r\n    role: PropTypes.object\r\n  }\r\n\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    //根据传入角色menus生成初始状态\r\n    const { menus } = this.props.role\r\n    this.state = {\r\n      checkedKeys: menus\r\n    }\r\n  }\r\n\r\n  //为父组件的提交获取最新menus数据\r\n  getMenus = () => this.state.checkedKeys\r\n\r\n  getTreeNodes(menuList) {\r\n    return menuList.reduce((acc, item) => {\r\n      acc.push(\r\n        {\r\n          title: item.title,\r\n          key: item.key,\r\n          children: item.children ? this.getTreeNodes(item.children) : null\r\n        }\r\n      )\r\n      return acc\r\n    }, [])\r\n  }\r\n  //选中某个treenode时的回调\r\n  onCheck = (checkedKeys, info) => {\r\n    // console.log('onCheck', checkedKeys, info);\r\n    this.setState({\r\n      checkedKeys\r\n    })\r\n  };\r\n\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.treeNodes = this.getTreeNodes(menuList)\r\n  }\r\n\r\n  //根据新传入的role来更新checkedKeys状态\r\n  //当组件接收到新的属性时自动调用\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    // console.log(nextProps);\r\n    const menus = nextProps.role.menus\r\n    this.setState({\r\n      checkedKeys: menus\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    console.log(\"AuthRole\");\r\n    const { role } = this.props\r\n    const { checkedKeys } = this.state\r\n\r\n    return (\r\n      <div>\r\n        <Item label=\"Role Name\">\r\n          <Input value={role.name} disabled />\r\n        </Item>\r\n        <Tree\r\n          checkable\r\n          defaultExpandAll={true}\r\n          treeData={this.treeNodes}\r\n          checkedKeys={checkedKeys}\r\n          onCheck={this.onCheck}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthRole;","import React, { Component } from 'react';\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\n//import memoryUtils from '../../utils/memoryUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport allReq from '../../api'\r\nimport AddRole from './AddRole.jsx'\r\nimport AuthRole from './AuthRole'\r\nimport { formateDate } from '../../utils/dateUtils'\r\nimport {logout} from '../redux/actions'\r\nclass Role extends Component {\r\n\r\n  state = {\r\n    roles: [],//所有角色的列表\r\n    role: {}, //选中的role\r\n    isShowAdd: false, //是否显示添加页面\r\n    isShowAuth: false //是否显示设置权限界面\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.auth = React.createRef()\r\n  }\r\n\r\n  initColumn = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"Role Name\",\r\n        dataIndex: \"name\"\r\n      },\r\n      {\r\n        title: \"Create_Time\",\r\n        dataIndex: \"create_time\",\r\n        render: (create_time) => {\r\n          return formateDate(create_time)\r\n        }\r\n      },\r\n      {\r\n        title: \"Auth_Time\",\r\n        dataIndex: \"auth_time\",\r\n        render: (auth_time) => {\r\n          return formateDate(auth_time)\r\n        }\r\n      },\r\n      {\r\n        title: \"Auth_Name\",\r\n        dataIndex: \"auth_name\"\r\n      },\r\n    ]\r\n  }\r\n\r\n  getRoles = async () => {\r\n\r\n    const result = await allReq.reqRoles()\r\n    if (result.status === 0) {\r\n      const roles = result.data\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n  onRow = (role) => {\r\n    return {\r\n      onClick: event => {\r\n        // alert('@@@')\r\n        this.setState({\r\n          role\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  //添加角色\r\n  addRole = async () => {\r\n    this.form.validateFields().then(async (values) => {\r\n      //隐藏确认框\r\n      this.setState({\r\n        isShowAdd: false\r\n      })\r\n      // console.log(values);\r\n      const { roleName } = values\r\n      //重置数据\r\n      this.form.resetFields()\r\n      const result = await allReq.reqAddRole(roleName)\r\n      if (result.status === 0) {\r\n        message.success(\"role created successfully\")\r\n        // this.getRoles()\r\n        const role = result.data\r\n        //更新roles状态，基于原本的状态数据更新\r\n        this.setState(state => ({\r\n          roles: [...state.roles, role]\r\n        })\r\n\r\n        )\r\n      }\r\n    })\r\n      .catch((err) => {\r\n        message.info('fail to create role')\r\n      })\r\n  }\r\n\r\n  //更新角色\r\n  updateRole = async () => {\r\n\r\n    this.setState({\r\n      isShowAuth: false\r\n    })\r\n    const role = this.state.role\r\n    //得到最新的menus\r\n    const menus = this.auth.current.getMenus()\r\n    role.menus = menus\r\n    role.auth_time = Date.now()\r\n    role.auth_name = this.props.user.username\r\n    const result = await allReq.reqUpdateRole(role)\r\n    if (result.status === 0) {\r\n      //如果当前更新的是自身角色的权限，强制退出\r\n      if (role._id ===  this.props.user.role_id) {\r\n        //memoryUtils.user = {}\r\n        //storageUtils.removeUser()\r\n        //this.props.history.replace('/login')\r\n        this.props.logout()\r\n        message.success('The current user role permission is changed. Log in again')\r\n      } else {\r\n        message.success('The role permission is set successfully')\r\n        this.getRoles()\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.initColumn()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRoles()\r\n  }\r\n\r\n  render() {\r\n    const { roles, role, isShowAdd, isShowAuth } = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <Button type=\"primary\" onClick={() => this.setState({ isShowAdd: true })}>Create Role</Button>&nbsp;&nbsp;\r\n        <Button type=\"primary\" disabled={!role._id} onClick={() => this.setState({ isShowAuth: true })}>Setting Role Authority</Button>\r\n      </span>\r\n    )\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          rowSelection={{\r\n            type: \"radio\",\r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role) => {\r\n              //选择某个radio时回调\r\n              this.setState({\r\n                role\r\n              })\r\n            }\r\n          }}\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{ defaultPageSize: PAGE_SIZE }}\r\n          onRow={this.onRow}\r\n        />\r\n\r\n        <Modal\r\n          title=\"Create Role\"\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.setState({ isShowAdd: false })\r\n            //重置数据\r\n            this.form.resetFields()\r\n          }}>\r\n          <AddRole setForm={form => this.form = form} />\r\n        </Modal>\r\n        <Modal\r\n          title=\"Setting Role Authority\"\r\n          visible={isShowAuth}\r\n          onOk={this.updateRole}\r\n          onCancel={() => {\r\n            this.setState({ isShowAuth: false })\r\n          }}>\r\n          <AuthRole role={role} ref={this.auth} />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n   state=>({user:state.user}),\r\n   {logout}\r\n)\r\n(Role);","import React, { Component } from 'react'\r\nimport { Button, Card } from \"antd\"\r\nimport ReactEcharts from \"echarts-for-react\"\r\n/*\r\n柱状图路由\r\n*/\r\n\r\nexport default class Bar extends Component {\r\n\r\n        state={\r\n            sales:[5,20,36,10,10,20], //销量数组\r\n           Storage:[6, 10, 36, 8, 7, 28] //库存的数组\r\n        } \r\n\r\n\r\n        update=()=>{\r\n            this.setState(state=>({\r\n                sales:state.sales.map(sale=>sale+1),\r\n                Storage:state.Storage.reduce((pre, Storage)=>{\r\n                    pre.push( Storage-1)\r\n                    return pre\r\n                },[])\r\n\r\n            }))\r\n        }\r\n   //返回柱状图的配置对象\r\n    getOption=(sales,Storage)=>{\r\n       return{\r\n        title: {\r\n            text: 'ECharts exemple'\r\n        },\r\n        tooltip: {},\r\n        legend: {\r\n            data:['Sales', 'Storage']\r\n        },\r\n        xAxis: {\r\n            data: [\"Shirt\",\"Woollen Sweater\",\"Blouse\",\"Trousers\",\"High-heeled Shoes\",\"Socks\"]\r\n        },\r\n        yAxis: {},\r\n        series: [{\r\n            name: 'Sales',\r\n            type: 'bar',\r\n            data: sales\r\n        },\r\n                 {    \r\n            name: 'Storage',\r\n            type: 'bar',\r\n            data: Storage\r\n        }]\r\n       }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { sales , Storage} = this.state\r\n        return (\r\n            <div>\r\n                <Card >\r\n                   <Button onClick={()=>this.update()}type=\"primary\">update</Button>\r\n                 </Card>\r\n                <Card title='Bar chart'>\r\n                    <ReactEcharts style={{height:'300px'}} option={this.getOption( sales,Storage)}></ReactEcharts>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, Card } from \"antd\"\r\nimport ReactEcharts from \"echarts-for-react\"\r\n/*\r\n柱状图路由\r\n*/\r\n\r\nexport default class Line extends Component {\r\n\r\n        state={\r\n            sales:[5,20,36,10,10,20], //销量数组\r\n           Storage:[6, 10, 36, 8, 7, 28] //库存的数组\r\n        } \r\n\r\n\r\n        update=()=>{\r\n            this.setState(state=>({\r\n                sales:state.sales.map(sale=>sale+1),\r\n                Storage:state.Storage.reduce((pre, Storage)=>{\r\n                    pre.push( Storage-1)\r\n                    return pre\r\n                },[])\r\n\r\n            }))\r\n        }\r\n   //返回折线图的配置对象\r\n    getOption=(sales,Storage)=>{\r\n       return{\r\n        title: {\r\n            text: 'ECharts Example'\r\n        },\r\n        tooltip: {},\r\n        legend: {\r\n            data:['Sales', 'Storage']\r\n        },\r\n        xAxis: {\r\n            data: [\"Shirt\",\"Woollen Sweater\",\"Blouse\",\"Trousers\",\"High-heeled Shoes\",\"Socks\"]\r\n        },\r\n        yAxis: {},\r\n        series: [{\r\n            name: 'Sales',\r\n            type: 'line',\r\n            data: sales\r\n        },\r\n                 {    \r\n            name: 'Storage',\r\n            type: 'line',\r\n            data: Storage\r\n        }]\r\n       }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { sales , Storage} = this.state\r\n        return (\r\n            <div>\r\n                <Card >\r\n                   <Button onClick={()=>this.update()}type=\"primary\">update</Button>\r\n                 </Card>\r\n                <Card title='Line chart'>\r\n                    <ReactEcharts style={{height:'300px'}} option={this.getOption( sales,Storage)}></ReactEcharts>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, Card } from \"antd\"\r\nimport ReactEcharts from \"echarts-for-react\"\r\nimport { FileExcelFilled } from '@ant-design/icons'\r\n/*\r\n柱状图路由\r\n*/\r\n\r\nexport default class Pie extends Component {\r\n\r\n        state={\r\n            sales:[5,20,36,10,10,20], //销量数组\r\n           Storage:[6, 10, 36, 8, 7, 28] //库存的数组\r\n        } \r\n\r\n\r\n        update=()=>{\r\n            this.setState(state=>({\r\n                sales:state.sales.map(sale=>sale+1),\r\n                Storage:state.Storage.reduce((pre, Storage)=>{\r\n                    pre.push( Storage-1)\r\n                    return pre\r\n                },[])\r\n\r\n            }))\r\n        }\r\n   //返回折线图的配置对象\r\n    getOption=()=>{\r\n       return{\r\n        series : [\r\n            {\r\n                name: '访问来源',\r\n                type: 'pie',\r\n                radius: '55%',\r\n                data:[\r\n                    {value:235, name:'Video Advertisement'},\r\n                    {value:274, name:'AD Network'},\r\n                    {value:310, name:' Email Marketing'},\r\n                    {value:335, name:'Direct Access'},\r\n                    {value:400, name:'Search Engine'}\r\n                ]\r\n            }\r\n        ]\r\n       }\r\n    }\r\n    getOption2 = () => {\r\n        return {\r\n          backgroundColor: \"#2c343c\",\r\n          title: {\r\n            text: \"Customized Pie\",\r\n            left: \"center\",\r\n            top: 20,\r\n            textStyle: {\r\n              color: \"#ccc\",\r\n            },\r\n          },\r\n          tooltip: {\r\n            trigger: \"item\",\r\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\",\r\n          },\r\n          visualMap: {\r\n            show: false,\r\n            min: 80,\r\n            max: 600,\r\n            inRange: {\r\n              colorLightness: [0, 1],\r\n            },\r\n          },\r\n          series: [\r\n            {\r\n              name: \"访问来源\",\r\n              type: \"pie\",\r\n              radius: \"55%\",\r\n              center: [\"50%\", \"50%\"],\r\n              data: [\r\n                { value: 335, name: \"Direct Access\" },\r\n                { value: 310, name: \"Email Marketing\" },\r\n                { value: 274, name: \"AD Network\" },\r\n                { value: 235, name: \"Video Advertisement\" },\r\n                { value: 400, name: \"Search Engine\" },\r\n              ].sort(function (a, b) {\r\n                return a.value - b.value;\r\n              }),\r\n              roseType: \"radius\",\r\n              label: {\r\n                normal: {\r\n                  textStyle: {\r\n                    color: \"rgba(255, 255, 255, 0.3)\",\r\n                  },\r\n                },\r\n              },\r\n              labelLine: {\r\n                normal: {\r\n                  lineStyle: {\r\n                    color: \"rgba(255, 255, 255, 0.3)\",\r\n                  },\r\n                  smooth: 0.2,\r\n                  length: 10,\r\n                  length2: 20,\r\n                },\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  color: \"#c23531\",\r\n                  shadowBlur: 200,\r\n                  shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                },\r\n              },\r\n              animationType: \"scale\",\r\n              animationEasing: \"elasticOut\",\r\n              animationDelay: function (idx) {\r\n                return Math.random() * 200;\r\n              },\r\n            },\r\n          ],\r\n        };\r\n      };\r\n\r\n    render() {\r\n        const { sales , Storage} = this.state\r\n        return (\r\n            <div>\r\n                <Card title='Pie1'>\r\n                    <ReactEcharts style={{height:'300px'}} option={this.getOption()} style={{height:300}}></ReactEcharts>\r\n                </Card>\r\n                <Card title='Pie2'>\r\n                    <ReactEcharts style={{height:'300px'}} option={this.getOption2()} style={{height:300}}></ReactEcharts>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Input, Select } from 'antd'\r\n\r\nconst { Item } = Form\r\nconst { Option } = Select\r\n\r\n\r\n//添加/修改用户的组件\r\nclass UserForm extends PureComponent {\r\n  formRef = React.createRef()\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, //用来传递form对象的函数\r\n    roles: PropTypes.array.isRequired,\r\n    user: PropTypes.object\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setForm(this.formRef.current)\r\n  }\r\n\r\n  render() {\r\n    const { roles } = this.props\r\n    const user = this.props.user || {}\r\n\r\n    return (\r\n      <Form\r\n        ref={this.formRef}\r\n        labelCol={{ span: 4 }}\r\n        wrapperCol={{ span: 14 }}\r\n      >\r\n        <Item\r\n          label=\"username\"\r\n          name=\"username\"\r\n          initialValue={user.username}\r\n          rules={[\r\n            { required: true, message: 'username required' }\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Please enter username\" />\r\n        </Item>\r\n        {\r\n          user._id ? null : (<Item\r\n            label=\"passward\"\r\n            name=\"password\"\r\n            initialValue={user.password}\r\n            rules={[\r\n              { required: true, message: 'password required' },\r\n              { min: 4, max: 12 }\r\n            ]}\r\n          >\r\n            <Input type=\"password\" placeholder=\"Password must be at least 4 characters\" />\r\n          </Item>)\r\n        }\r\n        <Item\r\n          label=\"phone\"\r\n          name=\"phone\"\r\n          initialValue={user.phone}\r\n          rules={[\r\n            { required: true, message: 'phone number required' }\r\n          ]}\r\n        >\r\n          <Input placeholder=\"please enter phone number\" />\r\n        </Item>\r\n        <Item\r\n          label=\"email\"\r\n          name=\"email\"\r\n          initialValue={user.email}\r\n          rules={[\r\n            { required: true, message: 'email required' }\r\n          ]}\r\n        >\r\n          <Input placeholder=\"please enter email\" />\r\n        </Item>\r\n        <Item\r\n          label=\"role\"\r\n          name=\"role_id\"\r\n          initialValue={user.role_id}\r\n        >\r\n          <Select placeholder=\"please choose role\">\r\n            {\r\n              roles.map(role => {\r\n                return <Option value={role._id} key={role._id}>{role.name}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserForm;","import React, { Component } from 'react';\r\nimport { Card, Modal, Button, Table, message } from 'antd'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nimport { formateDate } from '../../utils/dateUtils'\r\nimport LinkButton from '../../components/LinkButton'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\nimport allReq from '../../api'\r\nimport UserForm from './UserForm'\r\n\r\nclass User extends Component {\r\n\r\n  state = {\r\n    users: [],//所有的用户列表\r\n    roles: [], //所有角色列表\r\n    isShow: false, //是否显示确认框\r\n  }\r\n\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: 'Username',\r\n        dataIndex: 'username'\r\n      },\r\n      {\r\n        title: 'Email',\r\n        dataIndex: 'email'\r\n      },\r\n      {\r\n        title: 'Phone',\r\n        dataIndex: 'phone'\r\n      },\r\n      {\r\n        title: 'Create_time',\r\n        dataIndex: 'create_time',\r\n        render: formateDate //时间格式化\r\n      },\r\n      {\r\n        title: 'Role_id',\r\n        dataIndex: 'role_id',\r\n        // render: (role_id) => {\r\n        //   const result = this.state.roles.find(role => role._id === role_id)\r\n        //   return result.name\r\n        // }\r\n        render: (role_id) => this.roleNames[role_id]\r\n      },\r\n      {\r\n        title: 'Management',\r\n        render: (user) => {\r\n          return (\r\n            <span>\r\n              <LinkButton onClick={() => this.showUpdate(user)}>update</LinkButton>\r\n              <LinkButton onClick={() => this.deleteUser(user)}>delete</LinkButton>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n    ]\r\n  }\r\n\r\n  //根据role的数组生成包含所有角色名的对象(属性名用角色id值)\r\n  initRoleNames = (roles) => {\r\n    const roleNames = roles.reduce((acc, role) => {\r\n      acc[role._id] = role.name\r\n      return acc\r\n    }, {})\r\n    //保存\r\n    this.roleNames = roleNames\r\n  }\r\n\r\n  //删除指定用户\r\n  deleteUser = (user) => {\r\n    // console.log(user);\r\n    Modal.confirm({\r\n      title: `Confirm delete ${user.username}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n      onOk: async () => {\r\n        const result = await allReq.reqDeleteUser(user._id)\r\n        if (result.status === 0) {\r\n          message.success(\"delete user successfully\")\r\n          this.getUsers()\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  //显示修改页面\r\n  showUpdate = (user) => {\r\n    this.user = user  //保存user\r\n    // console.log(user);\r\n    this.setState({\r\n      isShow: true\r\n    })\r\n  }\r\n\r\n  //显示添加页面\r\n  showAdd = () => {\r\n    this.user = null //去掉前面缓存的user\r\n    this.setState({\r\n      isShow: true\r\n    })\r\n  }\r\n\r\n  //添加或者更新用户\r\n  addOrUpdateUser = () => {\r\n    this.form.validateFields().then(async values => {\r\n      this.setState({\r\n        isShow: false\r\n      })\r\n      this.form.resetFields()\r\n      // console.log(values);\r\n\r\n      //如果是更新，需要给user指定_id属性\r\n      if (this.user) {\r\n        values._id = this.user._id\r\n      }\r\n      const result = await allReq.reqAddOrUpdateUser(values)\r\n      if (result.status === 0) {\r\n        message.success(`${this.user ? '修改' : '添加'}用户成功`)\r\n        this.getUsers()\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  //获取所有的用户\r\n  getUsers = async () => {\r\n    const result = await allReq.reqUsers()\r\n    if (result.status === 0) {\r\n      const { users, roles } = result.data\r\n      this.initRoleNames(roles)\r\n      this.setState({\r\n        users,\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUsers()\r\n  }\r\n\r\n\r\n  render() {\r\n    const title = <Button type='primary' onClick={() => this.showAdd()}>Create User</Button>\r\n    const { users, isShow, roles } = this.state\r\n    const user = this.user || {}\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          dataSource={users}\r\n          columns={this.columns}\r\n          bordered\r\n          rowKey='_id'\r\n          pagination={{ defaultPageSize: PAGE_SIZE, showQuickJumper: true }}\r\n        />;\r\n        <Modal\r\n          title={user._id ? 'update user' : 'create user'}\r\n          visible={isShow}\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={() => {\r\n            this.setState({ isShow: false })\r\n            this.form.resetFields()\r\n          }}\r\n          destroyOnClose\r\n        >\r\n          <UserForm setForm={form => this.form = form} roles={roles} user={this.user} />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;","import React, { Component } from \"react\";\r\nimport { Button, Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { setHeadTitle } from \"../redux/actions\";\r\nimport \"./not-found.less\";\r\n/*前台 404 页面\r\n */\r\nclass NotFound extends Component {\r\n  goHome = () => {\r\n    this.props.setHeadTitle(\"首页\");\r\n    this.props.history.replace(\"/home\");\r\n  };\r\n  render() {\r\n    return (\r\n      <Row className=\"not-found\">\r\n        <Col span={0} className=\"left\"></Col>\r\n        <Col span={24} className=\"right\">\r\n          <h1>404</h1>\r\n          <h2>Page not found</h2>\r\n          <div>\r\n            <Button type=\"primary\" onClick={this.goHome}>\r\n              Back to home\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, { setHeadTitle })(NotFound);","import React, { Component } from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\n//import memoryUtils from '../../utils/memoryUtils'\r\nimport {connect} from 'react-redux'\r\nimport { Layout } from 'antd';\r\nimport LeftNav from '../../components/left-nav'\r\nimport Header from '../../components/header'\r\nimport Home from '../home/home';\r\nimport Category from '../category';\r\nimport Product from '../product/product';\r\nimport Role from '../role/role';\r\nimport Bar from '../charts/bar';\r\nimport Line from '../charts/line';\r\nimport Pie from '../charts/pie';\r\nimport User from '../user/user';\r\nimport NotFound from '../not-found/not-found'\r\n\r\nconst {  Footer, Sider, Content } = Layout\r\n\r\nclass Admin extends Component {\r\n    render() {\r\n        const user = this.props.user\r\n        //如果内存中没有存储user  ==》 当前没有登陆\r\n        if (!user || !user._id) {\r\n        //自动跳转到登陆（在render（）中)\r\n        return <Redirect to = '/login'/>\r\n        }\r\n        return (\r\n            <Layout style={{minHeight:'100%'}}>\r\n            <Sider>\r\n               <LeftNav/>\r\n            </Sider>\r\n            <Layout>\r\n              <Header>Header</Header>\r\n              <Content style={{margin:20, backgroundColor:'#fff'}}>\r\n                <Switch>\r\n                  <Redirect exact = {true} from =\"/\" to =\"/home\"/>\r\n                  <Route path=\"/home\" component={Home} />\r\n                  <Route path=\"/category\" component={Category} />\r\n                  <Route path=\"/product\" component={Product} />\r\n                  <Route path=\"/role\" component={Role} />\r\n                  <Route path=\"/user\" component={User} />\r\n                  <Route path=\"/charts/bar\" component={Bar} />\r\n                  <Route path=\"/charts/line\" component={Line} />\r\n                  <Route path=\"/charts/pie\" component={Pie} />\r\n                  <Route component = {NotFound}/> //上面没有一个匹配的，直接显示\r\n                </Switch>\r\n               </Content>\r\n              <Footer style={{textAlign:'center', color:'grey'}}>Google Chrome is recommended for better page operation experience</Footer>\r\n            </Layout>\r\n          </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n  state=>({user:state.user}),\r\n  {}\r\n)(Admin)","\r\nimport React, {Component} from 'react'\r\n//import {Button, message} from 'antd'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\n/*\r\n应用的根组件\r\n*/\r\nexport default class App extends Component{\r\n   \r\n\r\n   \r\n   render() {\r\n      return(\r\n      <BrowserRouter>\r\n      <Switch>{/*只匹配其中一个*/}\r\n      <Route path='/login' component={Login}></Route>\r\n      <Route path='/' component={Admin}></Route>\r\n      </Switch>\r\n      </BrowserRouter>\r\n      )\r\n   }\r\n}\r\n\r\n\r\n","/*\r\n入口 js\r\n*/\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\nimport store from './pages/redux/store'\r\n//import 'antd/dist/antd.css'\r\nimport App from './App'\r\n//import storageUtils from './utils/storageUtils'\r\n//import memoryUtils from './utils/memoryUtils'\r\n//读取local中保存的user，保存到内存中\r\n//const user = storageUtils.getUser()\r\n//memoryUtils.user= user\r\n\r\n//将App组件标签渲染到index页面的div上\r\nReactDOM.render((\r\n    <Provider store= {store}> <App/></Provider>),\r\n    \r\n    document.getElementById('root')) "],"sourceRoot":""}